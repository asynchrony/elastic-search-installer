#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'elastic_search_installer_version'

include GLI

program_desc 'Describe your application here'

version ElasticSearchInstaller::VERSION

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]

desc 'Installs Elastic Search'
arg_name 'Describe arguments to install here'
command :install do |c|
  c.desc 'Describe a switch to install'
  c.switch :s

  c.desc 'Describe a flag to install'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|

    # Your command logic here

    #check if Java is installed
    puts 'Checking for java installation'
    unless system('java -version')
      raise 'You must have java installed'
    end
    puts 'Java is installed'

    # untar and unzip elastic search into tmp/
    puts 'Unpacking elastic search into tmp'
    root_path = File.expand_path(File.join(__FILE__, '..', '..', '..'))
    elastic_search_tar_path = File.join(root_path, 'lib', 'elasticsearch-0.18.4.tar.gz')
    tmp_path = File.join(root_path, 'tmp')
    FileUtils.mkdir_p tmp_path unless File.directory?(tmp_path)
    `cd #{tmp_path}; tar xzf #{elastic_search_tar_path}`
    puts 'Elastic search unpacked successfully'

    elastic_install_path = '~/'
    elastic_install_dir = File.expand_path(File.join(elastic_install_path, 'elasticsearch-0.18.4'))
    puts elastic_install_dir
    if File.exists?(elastic_install_dir)
      `rm -R #{tmp_path}`
      raise "Elastic search seems to already be installed at #{elastic_install_dir}, please run the uninstall command before continuing"
    end

    puts "Moving elastic search to #{elastic_install_path}"
    `mv #{tmp_path}/elasticsearch-0.18.4 #{elastic_install_path}`
    
    puts 'Removing the tmp directory'
    `rm -R #{tmp_path}`
  end
end

desc 'Describe uninstall here'
arg_name 'Describe arguments to uninstall here'
command :uninstall do |c|
  c.action do |global_options,options,args|
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
