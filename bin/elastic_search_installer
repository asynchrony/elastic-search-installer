#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'elastic_search_installer_version'
require 'installer'

include GLI

program_desc 'Describe your application here'

version ElasticSearchInstaller::VERSION

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]

desc 'Installs Elastic Search'
arg_name 'Describe arguments to install here'
command :install do |c|
  c.desc 'Describe a switch to install'
  c.switch :s

  c.desc 'Describe a flag to install'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|
    installer = Installer.new
    if installer.valid?
      installer.call
      puts %Q(
****************************
      I kan haz surch!
****************************

Elastic Search has been installed at #{installer.elastic_install_dir}
)
    else
      puts installer.error_messages
    end
  end
end

desc 'Describe uninstall here'
arg_name 'Describe arguments to uninstall here'
command :uninstall do |c|
  c.action do |global_options,options,args|
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
